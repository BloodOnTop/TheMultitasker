const UserAgent = require('user-agents')
const userAgent = new UserAgent({ deviceCategory: 'desktop' });
/**
 * 
 * @returns a random user agent.
 */
const randomUserAgent = () => userAgent.toString();


/**
 * Removes a given item from the array.
 * 
 * @param {Array} array the array from which you want to remove the element from.
 * @param {*} element the element to remove.
 * @returns array without the element.
 */
const removeFromArray = (array, element) => {
    return array.filter(item => item !== element);
}

/**
 * function for getting time as seconds and outputs in format hh:mm:ss.00 padding with 0 if needed.
 * @param {Number} time The time in seconds.
 * @returns 
 */
const getTime = (time) => {
    let seconds = Math.floor(time);
    let minutes = Math.floor(seconds / 60);
    let hours = Math.floor(minutes / 60);
    seconds = seconds % 60;
    minutes = minutes % 60;
    hours = hours % 60;

    return (hours < 10 ? '0' + hours : hours) + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds) + '.0';
}

/**
 * This method works by splitting the string into an array using the spread operator, 
 * and then uses the every() method to test whether all elements (characters) in the 
 * array are included in the string of digits '0123456789'.
 * @param {String} string the string to check if is integer.
 * @returns true if the string is an integer.
 */
const isInt = string => [...string].every(c => '0123456789'.includes(c));

/**
 * This method works by splitting the string into an array using the spread operator, 
 * and then uses the every() method to test whether all elements (characters) in the 
 * array are included in the string of digits '0123456789.'.
 * @param {String} string the string to check if is float.
 * @returns true if the string is an float.
 */
const isFloat = string => [...string].every(c => '0123456789.'.includes(c)) && ((string.split('.').length - 1) === 1);

/**
 * Function for checking if a number is between two numbers.
 * @param {Number} value The value to check.
 * @param {Number} min The minimum value.
 * @param {Number} max The maximum value.
 * @returns true if value is between min and max, false otherwise.
 * @example isBetween(5, 1, 10) // true
 */
const isBetween = (value, min, max) => min <= value && value <= max;

/**
 * Function for checking the magic number of a file.
 * more info: https://en.wikipedia.org/wiki/List_of_file_signatures
 * @param {Buffer} buffer The buffer of the file.
 * @returns the file type.
 */
const getFileTypeFromBuffer = (buffer) => {
    const types = {
        'ffd8': 'jpg',
        '8950': 'png',
        'fffb': 'mp3',
        '4949': 'tiff',
        '424d': 'bmp',
        '4749': 'gif',
        '2550': 'pdf',
        '504b': 'zip',
        '5261': 'rar',
        '1f8b': 'gz',
        '4d5a': 'exe',

    }
    const hex = buffer.toString('hex', 0, 2)
    return types[hex]
}

const base64Logo = `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
SZL8P0FTkGQfe4/+AAAAAElFTkSuQmCC`

module.exports = {
    removeFromArray,
    isInt,
    isFloat,
    isBetween,
    randomUserAgent,
    getTime,
    getFileTypeFromBuffer,
    base64Logo
}